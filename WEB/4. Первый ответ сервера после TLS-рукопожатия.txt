Браузер и сервер обменялись 8-ю сообщениями (3 для TCP-рукопожатия и 5 для TLS-рукопожатия).

Затем браузер отправляет инициирующий HTTP "GET" запрос.
Как правило запращивается HTML-файл.

Когда сервер получает этот запрос в ответ он отправляет заголовок документа и содержимое HTML-файла.

# Пример ответа сервера:
{
<!doctype HTML>
<html>
    <head>
        <meta charset="UTF-8"/>
        <title>My simple page</title>
        <link rel="stylesheet" src="styles.css"/>
        <script src="myscript.js"></script>
    </head>
    
    <body>
        <h1 class="heading">My Page</h1>
        <p>A paragraph with a <a href="https://example.com/about">link</a></p>
        <div>
            <img src="myimage.jpg" alt="image description"/>
        </div>
        <script src="anotherscript.js"></script>
    </body>
</html>
}

Этот файл содержит в себе первый байт полученных данных.
Время до первого байта (TTFB - Time to First Byte) - это время между моментом отправки пользователем
запроса (нажатием на ссылку, например) и моментом получения первого пакета данных HTML.
Первый пакет, как правило, содержит 14 Кб данных.

В примере ответ меньше 14 Кб, т.к. скрипты и стили из ответа не будут запрошены, пока браузер
не обработает весь ответ.
Процесс обработки ответа называется "Парсинг".

Объём первого пакета данных - всегда до 14 Кб. Это часть спецификации "TCP Slow Start".
Это алгоритм-балансировщик скорости соединения.
Он позволяет постепенно наращивать размер передаваемых данных.

Размер каждого нового пакета будет в 2 раза больше предыдущего.
Второй пакет будет уже размером около 28 Кб и т.д.
Размер наращивается, пока не будет достигнуто пороговое значение.

Медленный старт TCP позволяет плавно ускорять передачу данных так,
чтобы избежать проблемы переполнения, когда много данных ожидают отправки, 
но не отправляются из-за ограничений ширины канала.

# Контроль переполнения:
{
    Любое соединение имеет ограничения, связанные с аппаратной и сетевой системами. 
    Если сервер отправит слишком много пакетов за раз - они могут быть отброшены. 
    Для того, чтобы избежать таких проблем, браузер должен реагировать на получение пакетов 
    и подтверждать, что он получает их. Такой ответ-подтверждение называется "Aknowledgements" (ACK).
    Если из-за ограничений соединения браузер не получит данных, то он не пошлёт подтверждений ACK.
    
    В этом случае, сервер зарегистрирует, что какие-то пакеты не дошли и пошлёт их заново, 
    что приведёт к лишней работе сервера и дополнительной нагрузке на сеть.
}

