Для начала стоит пояснить, чем является TCP

TCP - (Transmission Control Protocol) - это протокол, управляющий передачей данных.
Почти всегда чтобы обеспечить надежную передачу пакетов TCP используется поверх IP,
поэтому эту связку протоколов часто называют TCP/IP.

По модели OSI протокол TCP работает на 4-ом уровне, который также называют транспортным.

Чтобы установить надежное соединение, TCP использует процесс,
называемый термином “трехстороннее рукопожатие” (three-way handshake).

Установленное соединение будет полнодуплексным, то есть ОБА канала могут передавать информацию
одновременно, а также они синхронизируют (SYN) и подтверждают (ACK) друг друга.

Обмен выполняется следующим образом:

1: Клиент отправляет сегмент с установленным флагом SYN.
При этом сегменту присваивается произвольный порядковый номер (sequence number).
Номер пролегает в интервале от 1 до 232 (т.н. initial sequence number), 
относительно которого будет вестись дальнейший отсчет последовательности сегментов в соединении.

Кстати, в случае неудачи сервер посылает клиенту сегмент с флагом RST.

2: Сервер получает запрос и отправляет ответный сегмент с одновременно установленными флагами
SYN+ACK, при этом записывает в поле «номер подтверждения» (acknowledgement number).

Номер подтверждения - это "sequence number", увеличенный на 1.
Такой принцип подтверждает получение первого сегмента.

Также устанавливается свой порядковый номер, который, как и в SYN-сегменте, выбирается произвольно.

У этого шага есть ещё 2 исхода:
1-ый если получен флаг RST. Тогда попытки соединения прекращаются.
2-ой если клиент не получает ответ в течние 10 секунд. Тогда попытка соединения повторяется.

3: После получения клиентом сегмента с флагами SYN+ACK соединение считается установленным.
Клиент, в свою очередь, отправляет в ответ сегмент с флагом ACK,
обновленными номерами последовательности, и не содержащий полезной нагрузки.

Если некоторое время сервер не получает сегментов - он закрывает сокет и переходит в состояние CLOSED.

4: Начинается передача данных.
В процессе передачи данных клиент и сервер обмениваются сегментами с установленными флагами ACK
или PSH+ASK, поочередно подтверждая число полученных пакетов путем увеличения счетчиков
порядкового номера (sequence number) и номера подтверждения (acknowledgement number).

TCP рукопожатие в цифрах и кратко:

SYN = X = rand();
SYN-ACK = X+1, Y = rand();
ACK = y+1 x+1;

SYN:
Клиент выбирает случайное число Х и отправляет SYN-пакет,
который может также содержать дополнительные флаги TCP и значения опций.

SYN-ACK:
Сервер выбирает свое собственное случайное число Y, прибавляет 1 к значению Х,
добавляет свои флаги и опции и отправляет ответ.

АСК
Клиент прибавляет 1 к значениям Х и Y и завершает хэндшейк, отправляя АСК-пакет.


# JS реализация генерации номеров для SYN, SYN-ACK и ACK:
{
let X = getRandom(0, 233);
let Y = getRandom(0, 233);

let SYN = [X];
let SYN_ACK = [ X+1, Y];
let ACK = [Y+1, X+1];

alert (SYN);
alert (SYN_ACK);
alert (ACK);

function getRandom(min, max) {
  return Math.round(Math.random() * (max - min) + min);
}

/*
# Пример вывода:
# SYN     = [ 139 ]
# SYN_ACK = [ 140, 182 ]
# ACK     = [ 183, 140 ]
*/
}