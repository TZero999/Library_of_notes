Для установки безопасных соединений с использованием HTTPS требуется ещё одно рукопожатие.
На этот раз - TLS переговоры.

На этом шаге определяется, какой шифр будет использоваться для шифрования соединения, 
удостоверяется надёжность сервера и устанавливается безопасное соединение.

Этот шаг также требует несколько дополнительных сообщений, которыми должны обменяться сервер 
и браузер, прежде чем данные будут посланы. Обмен 5-ю сообщениями снижает скорость соединения,
однако это плата, которую требуется заплатить за конфиденциальность передаваемой и получаемой
информации.

# О TLS-подробнее:
{
    TLS - Transport Layer Security - протокол, ранее известный как SSL - Secure Sockets Layer.
    Эти имена протокола взаимозаменяемы, но обозначают разные версии протокола.
    Используется приложениями для организации защищённой передачи данных по интернету.

    Смысл заключается в требовании браузером от сервера действующего "цифрового сертификата".
    Тем самым подтверждается безопасность соединения.

    Если протокол сконфигурирован корректно, то сторонний наблюдатель может узнать лишь 
    параметры соединения (например, тип используемого шифрования), а также частоту пересылки 
    и примерное количество данных, но не может читать и изменять их.

    # Три вида услуг, предоставляемых протоколом TLS:
    {
    1: Шифрование – сокрытие информации, передаваемой от одного компьютера к другому;
    2: Аутентификация – проверка авторства передаваемой информации;
    3: Целостность – обнаружение подмены информации подделкой.
    }

    Для того чтобы установить криптографически безопасный канал данных, 
    узлы соединения должны согласовать используемые методы шифрования и ключи.
}

# TLS-рукопожатие:
{
    Перед началом обмена данными через TLS клиент и сервер должны согласовать параметры соединения:
    1: Версию используемого протокола;
    2: Способ шифрования данных;
    3: Проверить подлинность сертификатов

    После установки TCP-соединения (TCP-рукопожатия) клиент посылает на сервер спецификацию 
    в виде обычного текста с указанием версии используемого протокола,
    поддерживаемых методов шифрования и т.д.

    Сервер устверждает версию протокола, выбирает способ шифрования из предоставленного списка,
    прикрепляет к файлу-ответу свой протокол и отправляет его клиенту. По желанию сервер также
    запрашивает сертификат безопасности клиента.

    Версия протокола и способ шифрования считается утверждённым, клиент проверяет сертификат
    и инициирует либо RSA, либо обмен ключами по Диффи-Хеллману в зависимости от параметров.
    
    Сервер обрабатывает присланные сообщения, сверяет MAC и отправляет клиент заключительное
    сообщение в уже зашифрованном виде.

    Клиент расшифровывает полученное сообщение, сверяет MAC-адрес. Если всё хорошо - соединение
    считается установленным, начинается обмен данными приложения.
}

# RSA и обмен ключами по Диффи-Хеллману:
{
    Это 2 способа обмена ключами. Чаще используется RSA, но он менее безопасен,
    Пара открытого и закрытого ключа используется не один раз, к тому же один из ключей
    передаётся между устройствами. 

    Обмен по Диффи-Хеллману является более защищённым вариантом, т.к. ключи не покидают 
    сервера и клиента, перехватить симметричный ключ невозможно. Даже если злоумышленник
    знает закрытый ключ - это не поможет ему получить доступ к данным.

    К тому же для каждого нового сеанса связи создаётся новый, временный симметричный ключ.

    Так, открытый ключ используется браузером только для установления TLS-рукопожатия во 
    время первичной настройки соединения. 
}

Больше более специфической информации смотри здесь:
https://habr.com/ru/post/258285/