Рендеринг включает в себя этапы:
1: Стилизация
2: Компоновка
3: Отрисовка
4: Композиция - только в некоторых случаях

Вкратце CSSOM и DOM деревья (созданные на этапе парсинга) комбинируются в дерево рендера,
затем дерево рендера используется для расчёта положения элементов на экране, а затем элементы
отрисовываются.

В некоторых случаях содержимое выносится на отдельные слои и совмещается - это и есть композиция.
Такой подход увеличивает производительность, позволяя отрисовывать содержимое на экране 
с помощью GPU, а не CPU. Это помогает освободить основной поток.

Разберём этапы подробнее:

# Стилизация:
{
    Стилизация - первый шаг рендеринга и третий этап в критическом пути рендеринга.
    
    На этом шагу комбинируются DOM и CSSOM деревья в единое дерево рендеринга.
    Конструирование дерева рендеринга начинается с прохода по всему DOM дереву от корня (тег <html>),
    с выявлением каждого видимого узла.

    Элементы, которые не должны быть показаны (<head> или элементы с правилом dispkay:none) не
    включаются в древо рендеринга, так как отрисовываться они не будут.

    Узлы с правилом "visibility:hidden" включаются в древо рендеринга, так как они всё равно
    должны занимать место на экране.

    Каждый видимый узел имеет свои правила CSS, записанные в CSSOM. Дерево рендера содержит
    все видимые узлы с их содержимым и вычисленными стилями.
}

# Компоновка - Layout
{
    Второй шаг рендеринга и четвёртый этап в критическом пути рендеринга.

    На этом шаге вычисляется геометрия каждого узла: ширина, высота, положение на экране.

    Любое последующее изменение переопределения размеров и позиций элементов называется 
    "Перекомпоновка", или "Reflow".

    Компоновка начинается сразу же, когда будет построено дерево рендеринга из предыдущего шага.
    Дерево рендеринга несёт в себе информацию о том, какие узлы должны быть отрисованы и какие
    к этим узлам должны быть применены стили.

    При этом дерево рендеринга НЕ НЕСЁТ информации о размерах и положении этих узлов.
    Для определения этих значений браузер начинает обход дерева.

    Размеры вычисляются, опять же, каскадно, начиная с узла <body> и двигаясь к его потомкам, 
    потомкам его потомков и т.д. Таким образом вычисляются размеры каждого известного узла.
    Если точный размер узла неизвенстен (например, изображения) - происходит резервирование
    места под них.

    Момент, когда вычислены первичные значения позиций и размеров узлов называется "компоновкой".
    Все последующие вычисления позиций и размеров называются уже "перекомпоновкой".
    
    Компоновка - Layout,
    Перекомпоновка - Reflow.

    Например, если в HTML-файле мы передаём картинку, размер которой не указываем заранее,
    сначала (до получения этого изображения) произойдёт layout, под картинку будет выделено
    неопределённое место. В момент получения изображения произойдёт Reflow. 
}

# Отрисовка - Paint
{
    Последний шаг критического пути рендеринга - отрисовка каждого отдельного узла на экране.

    Момент первой отрисовки называется "FMP - First Meaningful Paint" - первая значащая отрисовка.
    Во время фазы отрисовки браузер конвертирует каждый контейнер для узла в настоящие пиксели.
    Эти контейнеры - box-ы, которые были сформированы на этапе Layout (Компоновки).

    Для быстрой и плавной анимации отрисовка элементов занимают весь поток. Сюда включается и
    вычисление стилей, и повторное вычисление стилей, и отрисовка. Все эти этапы должны 
    выполняться не дольше, чем 16,67 мс (1000мс/60 кадров).

    При разрешении 2048 х 1536 должны быть отрисованы 3 145 000 пикселей. Чтобы сделать
    инициирующую и повторную отрисовку быстрее, можно разбить процесс на несколько слоёв.
    Именно для этого используется опциональный этап рендеринга - композиция.

    Отрисовка во время своей отработки может разбить элементы в древе рендера на слои.
    Для ускорения отрисовки слоёв браузер может перенеси обязанности отрисовки слоёв на GPU.
    Это освобождает основной поток CPU от лишней нагрузки.
}

# Искусственный перенос на отдельный слой.
{
    Существует ряд HTML-тегов, переносящих обязанности отрисовки элемента на GPU:
    <video> и <canvas>. Это же делают и некоторые CSS-свойства: "opacity", "transform" и 
    "will-change".

    Узлы, созданные такими тегами или обладающие такими свойствами будут отрисованы на 
    отдельном собственном слое вместе со всеми их потомками (если потомки не будут сами
    вынесены на отдельный слой).

    Наличие слоёв улучшают производительность, но с точки зрения управления памятью
    они неэффективны, потому не стоит использовать их там, где в этом нет необходимости.
}

# Композиция - Compositing
{
    Если разделы документа расположены на разных слоях, а один слой перекрывает собой другой,
    становится необходима "Композиция"
    Этот шаг позволяет браузеру гарантировать, что каждый слой будет отрисован на экране в
    правильном порядке и содержимое слоёв будет отображено корректно.

    При подгрузке ранее запрошенных ресурсов (например, изображений) может требоваться
    перерасчитать размеры и положения элементов. 
    
    Этот перерасчёт - "reflow" - перекомпоновка, вызывает перерисовку - "repaint" и перекомпозицию -
    "re-composite".
    Если размер изображение указан заранее - перерасчёт не потребуется, а перерисован будет только
    тот слой, которому перерисовка будет необходима.

    Крайне желательно опреедлять размеры таких элементов заранее. Иначе браузер обязан будет 
    "отматывать" процесс рендеринга к шагу компоновки (layout) и начинать весь процесс отрисовки
    заново.
}

#Интерактивность - "жизнь" после рендеринга.
{
    Когда основной поток завершает отрисовку страницы - на этом всё не заканчивается.

    Если среди загружаемых ресурсов есть JS-скрипты, загрузка которых была корректно отложена и
    запуск которых происходит после события "onload" - основной поток берётся за обработку 
    скриптов.

    Во время обработки скриптов браузер "блокирует" события прокрутки, нажатий и т.д.

    Time to Interactive (TTI - время до интерактивности) - показатель того, как много времени
    проходит от первого сетевого запроса до момента полной интерактивности страницы.

    В хронологии TTI наступает сразу за FCP - First Contentful Paint.
    Интерактивность - показатель того, что страница отреагировала на действия пользователя за
    50 мс. Если браузер долго (свыше 50 мс) занят обработкой, компиляцией и выполнением JS-скрипта -
    страница НЕ СЧИТАЕТСЯ интерактивной.

    Например, у нас есть скрипт размером 2 Мб, загружаться он будет довольно долго.
    В этом случае пользователь быстро увидит страницу, но не сможет взаимодействовать с ней,
    пока 2-мегабайтный скрипт не будет загружен, обработан и исполнен. Это КРАЙНЕ плохая ситуация.
}




