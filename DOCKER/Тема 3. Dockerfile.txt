Вспомним, что такое Dockerfile:
Dockerfile - это текстовый файл (без расширения!) с последовательностью инструкций для создания
образа Docker. Принцип записей в файле: "Одна строка = одна команда"

- FROM
Указываем, на чём базируется данный образ

- WORKDIR
Директория, в которую будет помещено наше приложение.


- COPY
Перемещение файлов и папок из проекта в образ

Первый аргумент - откуда копируем. Если ставим точку - ищем в корне
Второй аргумент - куда копируем в образе. Если ставим точку - помещаем в корень образа или
в коень папки, указанной в WORKDIR (если таковая указана).

- ADD
Добавляет файлы/папки в образ. Имеет 2 аргумента, как и COPY. На первый взгляд выглядит и 
используется как COPY, но при использовании ADD наш функционал становится намного шире. Так,
если в качестве копируемого файла указать архив, то он будет добавлен в образ в распакованном виде.
Также в качестве источника спокойно принимает URL, в отличие от COPY.

"ADD vs COPY"
COPY Рекомендован для использования в случаях, где не требуются возможностей ADD или когда
нужно просто перенести архив, как архив, не распаковывая его.

- RUN
Сюда помещаем предварительные действия для запуска образа.
Данная команда запускается только при построении образа.
Может выполняться несколько раз.
Например, можем установить "node" написав "RUN npm install".

- CMD
Команда, указывающая на действия, производимые в образе.
CMD запускается каждый раз при запуске образа.
Может выполниться только раз. При наличии нескольких команд CMD выполнится
только последняя.
Указывается как массив, каждый элемент массива - одна команда.
Пример: "CMD ['node','app.js']"

Ещё раз: RUN выполняется единожды при сборке образа, а CMD - каждый раз при запуске образа.
RUN запускается много раз, CMD - лишь единожды.
Получается, что в RUN надо записывать действия, которые не надо выполнять регулярно. 
Как правило это установка чего-либо.

- EXPOSE 
Необязательная команда.
Позволяет указывать ПОРТ, на котором запускается приложение

- LABEL
Позволяет добавлять различные метаданные: автор, версия образа и т.д.
Автор: maintainer="someone"
Версия: version="2"

- ENV
Задаёт переменные окружения в образе: Временная зона, логины и пароли и т.д.
Временная зона: TZ=Europe/Moscow
Пароль: PGPASSWORD pass

- ENTRYPOINT
Указывает команду, которой будет передаваться параметр при запуске контейнера.
ENTRYPOINT ["/sbin/apache2"]

- VOLUME
Добавляет в контейнер том.
VOLUME ["/opt/myapp"]

- USER
Задает пользователя, от которого будет запущен образ.
USER username:group

- ARG
Создает переменную, которую может использовать сборщик.
ARG folder=/opt/apps WORKDIR $folder

- ONBUILD
Действия, которые выполняются, если наш образ используется как базовый для другой сборки.
ONBUILD ADD . /app/src

- STOPSIGNAL
Переопределяет сигнал SIGTERM для завершения контейнера.
STOPSIGNAL SIGINT

- HEALTHCHECK
Команда, которая будет проверять работоспособность контейнера.
HEALTHCHECK --interval=5m --timeout=3s CMD curl -f http://localhost/ || exit 1

- SHELL
Позволяет заменить стандартную оболочку для выполнения команд на пользовательскую.
SHELL ["/bin/sh", "-c"]









RUN yum install -y epel-release && yum install -y nginx
RUN yum clean all
RUN echo "daemon off;" >> /etc/nginx/nginx.conf
RUN sed -i "0,/nginx/s/nginx/docker-nginx/i" /usr/share/nginx/html/index.html

CMD [ "nginx" ]