* SELECT

1. Ищем всех пассажиров:
SELECT name FROM passenger;

* WHERE LIKE

2. Ищем информацию о рейсах из Москвы:
SELECT * FROM trip WHERE town_from = 'Moscow' 

3. Ищем пассажиров с фамилиями, заканчивающимися на "...man":
SELECT name from passenger WHERE name LIKE '%man'
# name: Nicole Kidman, Garry Oldman

4. Ищем самолёты, которые летали в Москву:
SELECT DISTINCT plane
FROM trip 
WHERE town_to = 'Moscow'

* COUNT WHERE
5. Ищем количество рейсов самолёта TU-134:
SELECT plane, COUNT(*) as count
FROM trip 
WHERE plane = 'TU-134'
# plane: TU-134; count:	4

* Подзапросы

6. Ищем компании, совершавшие перелёт на Boeing:
SELECT DISTINCT name
FROM company
WHERE id IN (SELECT company  
            FROM trip 
            where plane = 'Boeing')
# name: air_France, British_AW
# Подзапрос был необходим из-за того, что в таблице "trip" указаны только id компаний.

7. Ищем компании, которые организуют полёты из Владивостока:
SELECT DISTINCT name 
FROM company 
WHERE id IN (SELECT company  
            FROM trip
            WHERE town_from = 'Vladivostok')
# Как и в прошлом случае используем подзапрос.

* JOIN

8. Тот же пример, но с JOIN:
SELECT DISTINCT name
FROM company
JOIN trip
ON company.id = trip.company
WHERE town_from = 'Vladivostok'
# Здесь уже используем JOIN.

9. В какие города можно улететь из Парижа и сколько времени займёт полёт:
SELECT town_to, TIMEDIFF(time_in, time_out) as flight_time
FROM trip 
WHERE town_from = 'Paris'
# СУБД - MySql. В других СУБД синтаксис и нужная функция могут отличаться

10. Найти рейсы, совершённые с 10 до 14 часов 1 января 1900-го года: 
SELECT * 
FROM trip
WHERE time_out BETWEEN 
    '1900-01-01 10:00:00'
AND
    '1900-01-01 14:00:00'
# LIKE сщвместно с BETWEEN использовать не выйдет.

11. Найти пассажиров с самым длинным именем
SELECT name
FROM passenger 
WHERE LENGTH(name) = (SELECT MAX(LENGTH(name))
                      FROM passenger)

12. Выведите номера рейсов и количество пассажиров для них:
SELECT trip, COUNT(passenger) as count
FROM Pass_in_trip
GROUP BY trip
# Используем COUNT вместе с GROUP BY.

13. Вывести имена людей, имеющий полных тёзок (name == name; id != id):
SELECT name
FROM passenger
GROUP BY name
HAVING COUNT(name)>1
# В данном примере увидим только ФИО людей - полных тёзок

14. Сделаем то же самое, но выведем не только имена, но id пассажиров-тёзок:
SELECT name, id
FROM passenger
WHERE name = (SELECT name FROM passenger 
GROUP BY name
HAVING COUNT(name)>1)

15. В какие города летал Bruce Willis?
SELECT DISTINCT town_to 
FROM trip 
JOIN Pass_in_trip 
ON trip.id = Pass_in_trip.trip 
JOIN passenger 
ON Pass_in_trip.passenger = passenger.id
WHERE name = 'Bruce Willis'
# Здесь два JOIN-а, так как две нужны нам таблицы связаны между собой через 3-ю.

16. Выведите дату и время прилёта пассажира Steve Martin в London:
SELECT name, town_to, time_in
FROM trip 

JOIN Pass_in_trip
ON trip.id = Pass_in_trip.trip

JOIN passenger 
ON Pass_in_trip.passenger = passenger.id

WHERE
name = 'Steve Martin' 
AND 
town_to = 'London'
# Для большей информативности лучше выведем имя, город и время. Инструкция WHERE всегда в конце.

17. Вывести количество перелётов и имена пассажиров, летавших хотя бы 1 раз.
Список отсортировать по убыванию количества пассажиров и возрастанию имён:

SELECT name, COUNT(*) as count 
FROM passenger 
JOIN Pass_in_trip
ON Pass_in_trip.passenger = passenger.id
GROUP BY passenger 
HAVING COUNT(trip) >= 1
ORDER BY COUNT(trip) DESC, name
# Крайне важен порядок инструкций.

18. Определить, сколько потратил каждый член семьи в 2005 году. Не отображать тех, кто не тратил ничего:
SELECT member_name, status, SUM(amount * unit_price) as costs
FROM FamilyMembers

JOIN Payments
ON FamilyMembers.member_id = Payments.family_member

WHERE
YEAR(date) = 2005 
AND 
amount * unit_price > 0 

GROUP BY member_name, status 
# Опять же усложнённый вариант проверки и группировка по двум полям.

19. Кто в семье старший?
SELECT member_name
FROM FamilyMembers
WHERE birthday = (SELECT MIN(birthday) FROM FamilyMembers)
# Да, если искать MAX получим младшего члена семьи.

20. Кто в семье когда-либо покупал картошку?
SELECT DISTINCT status 
FROM FamilyMembers

JOIN Payments
ON FamilyMembers.member_id = Payments.family_member 

JOIN Goods
ON Payments.good = Goods.good_id

WHERE good_name = 'potato'

21. Кто и сколько в семье тратит на развлечения? Вывести список в порядке убывания:
SELECT status, member_name, SUM(amount*unit_price) as costs
FROM FamilyMembers

JOIN Payments
ON FamilyMembers.member_id = Payments.family_member

JOIN Goods
ON Payments.good = Goods.good_id

JOIN GoodTypes
ON Goods.type = GoodTypes.good_type_id

WHERE good_type_name = 'entertainment'

GROUP BY status, member_name
ORDER BY costs DESC 
# Всё относительно просто, исходя из прошлых примеров.