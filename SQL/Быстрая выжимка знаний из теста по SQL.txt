1) Что такое реляционные базы данных:
База данных, в которой информация хранится в виде двумерных таблиц, связанных между собой.

2) Как выглядит запрос, для вывода ВСЕХ значений из таблицы Orders:
select * from Orders;

3) Какие данные мы получим из этого запроса: select id, date, customer_name from Orders:
Неотсортированные номера и даты всех заказов с именами заказчиков;

4) Есть ли ошибка в запросе: select id, date, customer_name from Orders where customer_name = Mike;
Mike необходимо записать в кавычках 'Mike';

5) Что покажет следующий запрос: select * from Orders where date between '2017-01-01' and '2017-12-31'
Все данные по заказам, совершенным за 2017 год;

6) Что не так с этим запросом: select id, date from Orders where seller_id = NULL;
Сравнение с NULL можно проводить только с оператором IS;

7) Порядок выполнения операторов AND и OR следующий:
Сначала выполняется AND, а затем OR;

8) Что покажет следующий запрос: select DISTINCT seller_id order by seller_id from Orders:
Ничего, запрос составлен неверно, ORDER BY всегда ставится в конце запроса;

9) Что делает спецсимвол '_' в паре с оператором LIKE: select * from Orders where customer_name like 'mik_':
найдет все имена, которые начинаются на mik и состоят из 4 символов;

- Ответил неверно:
10) Выберите корректный пример использования функции CONCAT:
select concat(`index`," ", `city`) from Orders; 

11) Что покажет следующий запрос: select concat(`index`," ", `city`) AS delivery_address from Orders:
соединит поля с индексом и адресом из таблицы Orders и покажет их с псевдонимом delivery_address;

- Ответил неверно
12) Выберите правильный пример использования функции округления ROUND:
select id, ROUND (price * discount, 2) AS total price from Orders;

13) Что покажет следующий запрос: select id from Orders where year (date) > 2018:
номера заказов, сделанных после 2018 года;

14) Для чего используется LIMIT: select * from Orders limit 10;
необходим, чтобы показать первых 10 записей в запросе

15) Что такое агрегирующие функции:
функции, которые работают с набором данных, превращая их в одно итоговое значение

- Ответил неверно, допустил, что в MySQL можно опустить слово AS.
16) Выберите пример правильно составленного запроса с использованием агрегирующей функции SUM:
select sum(price) from Orders;

- Ответил неверно
17) Возможно ли использование одновременно двух агрегирующих функций: select min(price), max(price) from Orders:
да, в результате мы получим минимальную и максимальную стоимости;

18) Выберите корректно составленный запрос с функцией GROUP BY:
select seller_id, count(*) from Orders GROUP BY seller_id;

- Не был уверен в ответе, но ответил верно.
19) Что покажет следующий запрос: select seller_id, count(*) from Orders GROUP BY seller_id HAVING seller_id IN (2,4,6):
количество заказов сгруппированное по продавцам 2, 4 и 6

20) Выберите пример корректно написанного запроса с использованием подзапроса, который выводит информацию о заказе с самой дорогой стоимостью:
select * from Orders where price = (select max(price) from Orders)

21) Что такое JOIN:
операция объединения;

22) Какого из перечисленных ниже видов JOIN на самом деле не существует:
TRUE JOIN - который выведет все верные значения;

- Ответил неверно
23) Выберите корректный пример составленного запроса с использованием JOIN. Данный запрос выведет нам данные ID заказа, имя заказчика и продавца:
select Orders.id, Orders.customer_name, Sellers.id from Orders LEFT JOIN Sellers ON Orders.seller_id = Sellers.id;

- Ответил неверно. Order by не может быть посреди union
24) Выберите правильный пример запроса с использованием UNION:
select id, city from Orders union select id, city from Sellers order by id;

25) Какого строкового типа данных нет в SQL:
STRING

26) Чем отличается CHAR и VARCHAR?
CHAR дополняет строку пробелами до максимальной длины, а VARCHAR тратит лишнюю память на хранение значения длины строки;

27) Как получить значение текущего года в SQL?
select year(now());

28) Как правильно добавить строку в таблицу? Какой запрос верный?
INSERT INTO `SimpleTable` (`some_text`) VALUES ("my text");

- В какой-то мере наугад, все остальные варианты были слишком подозрительные
29) Какие поля из таблицы обязательно перечислять в INSERT для вставки данных?
Те, у которых нет DEFAULT значения и которые не имеют атрибут auto_increment;

30) Как сделать несколько записей в таблицу за один запрос?
Перечислить через запятую все наборы значений после VALUES;

31) Зачем существует команда UPDATE, если можно сначала удалить запись, а потом добавить новую, исправленную:
Потому что в записи могут быть автоматически проставляемые поля, такие как auto_increment или timestamp, которые собьются при внесении записи заново;

- Ответил неверно
32) В каких командах можно использовать LIMIT?
Select, Update, Delete

33) Как можно заранее узнать, какие записи будут удалены при выполнении DELETE?
Заменить DELETE на SELECT *, ведь в остальном синтаксис DELETE похож на синтаксис простого SELECT;

34) Какой командой можно создать новую таблицу?
CREATE TABLE;

- В какой-то мере наугад, все остальные варианты были слишком подозрительные
35) Можно ли поменять тип данных поля в уже существующей таблице?
Да, при помощи команды ALTER

Результат: 25/35
Уверенный
Хорошее знание SQL. Осталось набить руку практикой и можно в бой! :)