- Базовая теория:

"База данных" - конейнер (файл или группа файлов) для хранения упорядоченных данных.

"Реляционная БД" - БД, в которой информация хранится во взаимосвязанных таблицах.

"Масштабирование" - возможность справляться с возрастающей нагрузкой без сбоев.

"СУБД" - система управления базами данных.

"Таблица" - стуктурированный набо данных определённого типа.

"Схема" - информация о БД, а также о структуре и свойствах её таблиц.

"Столбец" = "Поле" - Все таблицы состоят из одного или нескольких столбцов (полей).

"Строка" - отдельная запись в таблице, характеризующая некий объект.

"Запись" = строка, однако более верно технически говорить о "строках".

"Первичный ключ" - Столбец/ набор столбцов, значения которого уникально идентифицируют каждую строку.

Стоит ВСЕГДА определять первичный ключ для каждой таблицы.
В будущем это даст возможность упростить любые манипуляции с данными.

Основные правила использования первичных ключей:
1) Две разные строки не могут иметь одно и то же значение первичного ключа;
2) Каждая строка должна иметь определённое значение первичного ключа (Не NULL);
3) Значения в столбце первичных ключей НЕИЗМЕННЫ
4) Значение первичного ключа не может быть использовано дважды, ДАЖЕ ЕСЛИ СТРОКА с таким ключом уже УДАЛЕНА.

- Совместимость типов данных:

Типы данных - основной источник конфликтов в SQL. Базовые типы обычно поддерживаются всеми СУБД.
Однако со сложными типами всё иначе. К тому же можно столкнуться с тем, что в разных СУБД
одинаковые базовые типы данных называются по-разному.

- SELECT

Пример синтаксиса:

SELECT prod_name
FROM Products;

"Сортировка данных" - разные СУБД могут по разному сортировать данные, выводимые запросом.
Порядок может зависеть, например, от хронологии внесения данных в таблицу.

"Извлечение нескольких столбцов":

SELECT prod_id, prod_name, prod_price
FROM Products;

"Извлечение всех столбцов":

SELECT * FROM Products;
"*" следует использовать тоглько если действительно нужны ВСЕ данные таблицы, т.к. это
приводит к серьёзному снижению производительности запроса.

- DISTINCT - Извлечение УНИКАЛЬНЫХ строк:
SQL позволяет извлечь только записи, с отличающимися значениями столбца.
Синтаксис:

SELECT DISTINCT vend_id
FROM Products;

- LIMIT - Ограничение результатов выдачи:
Данной функцией SQL стоит пользоваться с осторожностью.
Тут у разных СУБД разные реализации:
Предположим, нам надо вывести ПЕРВЫЕ 5 РЕЗУЛЬТАТОВ ЗАПРОСА:

"Microsoft SQL / Microsoft Access":
SELECT TOP 5 prod_name
FROM products;

"ORACLE":
SELECT prod_name
FROM Products
WHERE ROWNUM <=5;

"DB2":
SELECT prod_name
FROM Products
FETCH FIRST 5 ROWS ONLY;

"MySQL / MariaDB / PostgreSQL / SQLite":
SELECT prod_name
FROM Products
LIMIT 5;

- LIMIT + OFFSET:
LIMIT - Количество выводиымх строк.
OFFSET - Начальная точка вывода строк (Отсчёт с 0).

Ещё ра: ПЕРВАЯ СТРОКА имеет индекс 0!

"Краткая форма записи":
MySQL, MariaDB и SQLite поддерживают запись формы:
LIMIT 3,4 // Эта запись эквивалентна записи LIMIT 3 OFFSET 4

- Комментарии:

Есть 3 синтаксиса комментирования:

1) SELECT prod_name -- Это первый способ оставить комментарий;
2) SELECT prod_name # Это второй способ оставить комментарий;
3) /* SELECT prod_name */ Эта часть запроса закомментирована и не выполнится.

