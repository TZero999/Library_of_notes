- Подзапросы. Фильтрация с помощью подзапросов

Подзапрос - запрос, вложенный в другой запрос.

Пример:
SELECT cust_id
FROM orders
WHERE order_num IN (SELECT order_num
                    FROM OrderItems
                    WHERE prod_id = 'RGAN01');

Подзапросы обрабатываются "Изнутри наружу".

"Предупреждение":
Один подзапрос = один SELECT.
Попытка извлечь несколько столбцов в подзапросе приведёт к ошибке.

"Предупреждение 2":
Подзапросы чреваты для производительности.
Зачастую лучше использовать другие пути извлечения данных.

- Подзапросы в качестве вычисляемых полей

Пример:
SELECT  cust_name,
        cust_state,
        (SELECT COUNT(*)
        FROM orders
        WHERE orders.cust_id = customers.cust_id) AS orders
FROM customers
ORDER BY cust_name;

"Предупреждение":
Всегда полностью определяйте имена столбцов.
Иначе, в случае одинаковых имён столбцов разных таблиц,
мы получим ошибочные результаты.

ПОДЗАПРОСЫ - НЕ ОПТИМАЛЬНОЕ РЕШЕНИЕ!
Всегда старайтесь избегать использования подзапросов.

- Объединение таблиц

Объединение позволяет извлечь данные из нескольких страниц посредством одного запроса SELECT.

Пример:
SELECT vend_name, prod_name, prod_price
FROM vendors, products
WHERE vendors.vend_id = products.vend_id;

- Необходимость предложения WHERE:
WHERE позволяет СУБД определить каким образом должны устанавливаться связи между двумя таблицами.
Предложение WHERE действует как фильтр.

Не будем использовать WHERE - получим "декартово произведение" - количество полученных строк
будет равно числу строк в первой таблице, умноженному на число строк во второй таблице.
Объединение, возвращающее декартово произведение называют "перекрёстным".

- Внутренние объединения INNER JOIN:
Внутренние объединения основаны на равенстве записей двух таблиц.

Пример ниже идентичен примеру выше:
SELECT vend_name, prod_name, prod_price
FROM vendors INNER JOIN products
ON vendors.vend_id = products.vend_id; 

"Правильный синтаксис":
Согласно спецификации ANSI SQL предпочтителен синтаксис INNER JOIN.
Но большинство СУБД поддерживают оба синтаксиса.

- Объединение нескольких таблиц:
SQL формально не ограничивает число таблиц, которые могут быть объединены.

Пример:
SELECT prod_name, vend_name, prod_price, quantity
FROM OrderItems, products, vendors
WHERE products.vend_id = vendors.vend_id
AND OrderItems.prod_id = products.prod_id
AND order_num = 20007; 

"Предупреждение": Производительность
Время затрачивается на обработку каждой таблицы.
Этот процесс может оказаться очень ресурсоёмким, поэтому надо быть
осторожным и не использовать объединение почём зря.

"Предупреждение": Максимальное число таблиц
Ограничение максимального числа таблиц в каждой СУБД своё. 

"Совет":
Для выполнения одного и того же запроса зачастую есть несколько способов.
Редко можно сказать однозначно, какой будет более эффективен.
Потому бывает целесообразно поэкспериментировать с различными типами запросов.

