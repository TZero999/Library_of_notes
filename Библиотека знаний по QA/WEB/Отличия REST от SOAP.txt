* REST
1. Типы файлов:
Обычно работает с JSON, но можно использовать и XML, и текстовый форматы.

2. Протоколы:
Только HTTP и HTTPS.

3. Кэшируется?
Да.

4. Стиль или протокол?
Архитектурный стиль без строгих правил.

* SOAP
1. Типы файлов:
Только XML (с XSD и WSDL впридачу)

2. Протоколы:
Различные протоколы прикладного уровня.

3. Кэшируется?
Нет.

4. Стиль или протокол?
Протокол, сильно ограниченный жётскими правилами.

* Как выбирают на проекте?
REST или SOAP? Простота против стандарта.

REST: у вас будет скорость, расширяемость, поддержка многих форматов. Но есть вероятность, что нужно
будет лишний раз обращаться к разработчику и просить его предоставить вам информацию, примеры запросов.

SOAP: у вас будет больше возможностей по безопасности, а также больше возможности провести тестирование
качественно, так как сразу в SOAP у вас будут WSDL, где будут прописаны образцы ваших запросов.
SOAP более ресурсоемкий, занимает больше места, он медленнее. Разработка на SOAP дольше.