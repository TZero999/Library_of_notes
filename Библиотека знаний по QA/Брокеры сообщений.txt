* Брокер сообщений - это?
Простыми словами "брокер сообщений" - это программный компонент, являющийся посредником
между различными компонентами распределительной системы

В его работе используются 2 основные сущности:
"Producer" - отправитель/ издатель.
"Consumer" - потребитель/ подписчик.

Кроме этих двух сущностей есть "серединная точка" - что-то наподобие папки
файловой системы - она хранит в себе сообщения, полученные от продюссера.

* Для чего нужен брокер сообщений?

- Кратко:
Брокеры сообщенйи позволяют снижать нагрузку на веб-сервисы, т.к. с них снимается
необходимость заниматься пересылкой сообщений.

- Подробнее:
Позволяют организовать связи между отдельными службами, даже если какая-то из них 
в данный момент не работает. То бишь "продюсер" может отправлять сообщения, несмотря на то,
проявляет ли хоть какую-то активность "потребитель" в настоящее время.

Асинхронная обработка задач увеличивает производительность всей системы в целом.

Обеспечение надёжной доставки сообщений: брокеры сообщений, как правило, обеспечивают работу 
механизмов многократной отправки сообщений (одномоментно или через интервалы времени). Кроме того,
обеспечивается соответствующая маршрутизация сообщений, которые не были доставлены.

* Варианты режимов работы брокера сообщений:

1. Прямое отправление сообщения
Сообщение публикуется в хранилище и забирается потребителем. Каждое сообщение может быть
использовано лишь один раз.

2. Публикация/ подписка.
Отправитель ничего не знает о получателях. Он просто публикует сообщение в определённое 
"хранилище", папку. Подписчики этой папки получают это сообщение.

- Усовершенствованный режим с распределением сообщений:
В усложнённом варианте этого режима может быть выстроена логика распределения
сообщений между подписчиками. Например, в одно и то же хранилище публикуются сообщения
для разных подписчиков. Сообщения сопровождаются уникальным маркером, благодаря которому
подписчик понимает, какие сообщения предназначены для него.

* Недостатки брокеров сообщений:
1. Усложнение системы
В системе появляется ещё один элемент, возникает зависимость от надёжности распределённой сети.
Могут возникать проблемы из-за требований к непротиворечивости данных, ведь некоторые элементы
системы смогут обладать неактуальными данными.

2. Асинхронность
Из-за асинхронности и распределённости системы могут возникать непредвиденные и сложно
разрешимые проблемы.

3. Сложность освоения
Система не так проста, как кажется на первый взгляд. На её изучение может потребоваться
существенное время.

* Как компания решает вопрос о необходимости внедрения брокеров сообщений?
1) Системы с тяжёлыми задачами, требующими мгновенного результата:
Использование брокеров сообщений резонно в случае наличия в системе операций, на выполнение 
которых потребляется много времени и ресурсов, а результат выполнения этих операций должен быть
незамедлительным.

2) Микросервисные системы:
Брокер сообщений поможет скоординировать работу отдельных сервисов.
В таком случае брокер будет выступать "центральным роутером". Сообщения и запросы от клиентов 
будет поступать на брокер сообщений, а подписанные только на свой тип сообщений сервисы будут
получать эти сообщения и запросы из хранилища брокера.

3) Мобильные приложения:
Здесь возможен вариант с задействованием push-уведомлений. В итоге мы имеем много смартфонов с 
установленным приложением, которые подписаны на определённую тему или темы.

4) Транзакционные системы:
Если действия системы состоят из ряда шагов/транзакций и эти этапы ещё и выполняются отдельными
элементами системы - брокер сообщений может выступить в роли "доски уведомлений".
Каждый сервис будет давать сигнал после того, как его этап обработки выполнен.
Брокер сообщений будет следить за очерёдностью и отправкой задачи следующему сервису.

* Виды брокеров сообщений
Существует великое множество брокеров сообщений. Почти каждый из них обладает своими преимуществами
и заточен под конкретные задачи. Многие из них функционируют на основе легковесного протокола MQTT.
Подобные брокеры служат для сбора статистики, температуры и других показателей с распределённых датчиков,
установленных на определённых машинах, элементах конструкций, географически разных точках территории.

* Самые популярные корпоративные брокеры - Apache Kafka и RabbitMQ

- RabbitMQ
RabbitMQ - классический брокер. В нём устроено так, как описано выше:
присутствуют 2 сущности. Обе сущности взаимодействуют с очередью сообщений - хранилищем.

Обе стороны уведомляют друг друга об успешности доставки сообщений. 

Основная особенность - гибкость настроек. Так, например, сообщения не обязательно должн
приходить от продюссера к потребителю, они могут проходить через множество промежуточных узлов.

- Kafka
Kafka - это брокер, хранящий все сообщения в виде распределённого лога. Гарантируется, что порядок сообщений
в логе отражает последовательность их поступления в систему. Сообщения хранятся в логе определённое время.

Работа построена таким образом, что продюссер пишет сообщения в лог, а подписчики сами запрашивают их.
При надобности организуется хранение сообщений в рамках тем. 

Т.О. Kafka больше предназначен для построения высоконагруженных систем сферы BigData, т.к. его
механизмы позволяют создать надёжную систему и обеспечить неограниченное масштабирование.
Высокая пропускная способность, а также возможности извлечения сообщений из очереди за определённый период
времени (благодаря очереди, отражающей порядок) являются мощным инструментом для анализа происходящего в
историческом разрезе.

