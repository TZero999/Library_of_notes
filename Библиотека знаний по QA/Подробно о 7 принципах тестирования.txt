1. Тестирование показывает наличие дефектов, а не их отсутствие.

Это значит, что в процессе тестирования мы снижаем вероятность того, что в продукте остались дефекты. Но если дефектов не было обнаружено -
это не говорит о том, что их там нет и, тем более, не позволяет нам заявлять, что в данном ПО нет багов вовсе.

2. Исчерпывающее тестирование невозможно.

А даже если вам кажется обратное - затраты по времени и финансам для его проведения будут слишком неоправданы.

3. Ранее тестирование.

Тестовая активность должна начинаться ещё на этапе первого общения с заказчиком.

4. Скопление дефектов.

"В небольшом количестве модулей сокрыто бошльшое количество дефектов".
Согласно правилу Парето 80% дефектов находится в 20% функций. Тестировщики обязаны помнить об этом и правильно распределять время и концентрировать силы.

5. Парадокс пестицида.

Прогоняя снова и снова одни и те же тесты без изменений мы, вероятно, столкнёмся с тем, что они будут находить всё меньше и меньше ошибок, но не только из-за
улучшения качества продукта а из-за того, что старые тесты не будут работать как надо.

Преодолевается этот парадокс периодическим внесением изменений в используемые наборы тестов, внедрением новых методов тестирования, прогоном тестов другими
членами команды.

6. Тестирование зависит от контекста.

Выбор методологии, техник и типов тестирования напрямую зависит от природы программы.

7. Заблуждение "отсутствие ошибок = лучшее ПО".

Отсутствие багов - не прямой залог счастья пользователя.
Отсутствие обнаруженных ошибок - не показатель того, что ПО готово к релизу, ведь если система окажется неудобной в использовании - ей не будут пользоваться.