SFDPOT - мнемоническая схема, разработанная Джеймсом Бахом.

Многие тестировщики утверждают, что это эффективный инструмент для генерации новых
тестовых идей.

* SFDPOT: 
- Structures;
- Functions;
- Data;
- Platforms;
- Operations;
- Time.

Разберём каждый пункт:
- Structure
Проверка структуры ПО и составляющих его частей. На данном этапе разрабатывают тестовые
идеи и сценарии, связанные со структурой приложения.

- Function
Функциональность ПО. Проверяем то, что приложение делает и должно делать. На этом этапе
разрабатывают сценарии функционального тестирования продукта.

- Data
Работа с данными. Проверяем как ПО работает с данными. Тестировщики должны узнать, с какими
данными работает система, и разработать тесты, проверяющие, как система ведёт себя при 
получении и обрабатке различных видов данных и что даёт на выходе.

- Platform
Проверка того, как ПО взаимодействует с платформой, на которой оно запущено. Тестировщики должны
определить, на каких платформах выполнять ручное и автоматизированное тестирование.

- Operations
Использование. Проверка сценариев использования приложения. В этом пункте тестировщики должны выяснить,
кто же тепичный пользователь тестируемого ПО, какие задачи он собирается решать, используя наше ПО.

- Time
Проверка того, как приложение ведет себя в зависимости от времени.

* CRUSSPIC:
Представляют собой критерии эксплуатационного качества:

- Capability
Сфера и возможности применения, возможность выполнять ценные функции.

- Reliability
Надежность;

- Usability 
Удобство использования;

- Scalability
Масштабируемость ПО;

- Security
Безопасность использования и хранения данных;

- Performance
Производительность ПО;

- Installability
Возможность инсталляции/ деинсталяции ПО;

- Compability
Совместимость.

* CRUSSPIC? Maybe CRUCSPIC???
Товарищ Джеймса Баха, Генрих Эмильсон, не до конца согласился 4-ой буквой данной мнемоники.

Так, в его интерпретации, "Scalability" превратилось в "Charisma" привлекательность для пользователей;

Позже он расширил идею "харизмы ПО" добавив дополнительную мнемонику - кодовую фразу "SPACE HEADS".
Она помогает понять, что Генрих вкладывает в понятие "харизма программного продукта":

- Satisfaction
Удовлетворённость от использования;

- Professionalism
Профессионализм команды разработчиков;

- Attractiveness
Визуальная привлекательность;

- Curiosity
Любопытство;

- Entrancement
Увлечённость и одержимость при разработке;

- Hype
Шумиха вокруг проекта;

- Expectancy
Ожидание релиза и обновлений;

- Attitude
Уважительное отношение к пользователям;

- Directness
Прямота, отсутствие неисполнимых обещаний;

- Story
Некая история успеха, бэкграунд.

* STMPL
Мнемоника "STMPL" дополняет вышеобозначенные мнемоники.
Она представляет собой критерии качества самой разработки ПО:

- Supportability
Поддерживаемость ПО; 

- Testability
Возможность легкого тестирования ПО;

- Maintainability
Сопровождение, поддержка и расширение продукта, а также стоимость этих процедур; 

- Portability
Возможность переноса продукта в другое окружение;

- Localizability
Возможность адаптации ПО под другие языки и культуры.

* SFDPOT + CRUCSPIC STMPL? Почему бы и нет!
Данные методы весьма разнообразны и могут даже ссылаться друг на друга.
Так, весь "SFDPOT" может быть частью "Capability", весь CRUCSPIC STMPL может быть частью
"Oparations".

Однако обычно советуют использовать на проекте оба метода, но по отдельности друг от друга.
Это стимулирует мышление тестировщика в разных аспектах разрабатываемого ПО. Но ничто не запрещает
комбинировать и применять оба метода там, где они будут наиболее необходимы и полезны.

