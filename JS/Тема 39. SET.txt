- Объект SET - объект с уникальными значениями.

SET подразумевает "множество значений" без ключей, но каждое значение - уникальное.

"Основные методы SET":

1) new Set(iterable) - создаёт set и копирует в него значения итерируемого массива;
2) set.add(value) - добавляет значение. Если оно уже есть - ничего не делает. Возвращает set;
3) set.delete(value) - удаляет значение, возвращает true или false, в зависимости от наличия значения;
4) set.has(value) - возвращает true, если значение присутствует в множестве, иначе false;
5) set.clear() - удаляет все имеющиеся значения;
6) set.size - возвращает количество элементов в множестве.

Основное преимущество - то, что при вызовах set.add() с одним и тем же значением - эта инструкция игнорируется.

Пример:
    let set = new Set();

    let john = { name: "John" };
    let pete = { name: "Pete" };
    let mary = { name: "Mary" };

    set.add(john);
    set.add(pete);
    set.add(mary);
    set.add(john);
    set.add(mary);
    alert(set.size); //# set хранит только 3 уникальных значения

    for (let user of set) {
    alert(user.name); //# Выдаст по очереди в разных алертах John, Pete и Mary)
};

Казалось бы, что SET можно просто заменить массивом, а проверку на имеющийся элемент реализовывать с помощью arr.find.
Но производительность такого метода будет куда хуже, чем Set-а.
Множество set лучше оптимизировано и имеет автоматическую проверку на уникальность.

- Перебор объекта Set

Можно реализовать перебор объекта Set через for... of... или forEach.

Пример:
    let set = new Set(["апельсин", "яблоко", "банан"]);
    for (let value of set) alert(value); //# for... of...
    
    set.forEach((value, valueAgain, set) => {
    alert(value); //# forEach
});

"В forEach у Set 3 аргумента:"
1) value;
2) valueAgain - то же самое значение (для совместимости с Map);
3) set - целевой объект forEach.

Зачем одно значение появляется в списке дважды?
Для совместимости с объектом Map, в котором forEach имеет 3 аргумента.

Set имеет те же встроенные методы, что и Map:
1) set.values() - возвращает перебираемый объект;
2) sey.keys() - то же самое, что и set.values (присутствует только для совместимости с Map);
3) set.entries() - возвращает перебираемый объект для пар вида [значение, значение] (Тоже для совместимости с Map).

