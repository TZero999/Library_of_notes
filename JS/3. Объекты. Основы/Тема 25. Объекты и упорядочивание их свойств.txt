Если мы в цикле будем перебирать свойства объекта - получим ли мы их в том же порядке, в котором добавляли их?

Короткий ответ: свойства упорядочены особым образом:
свойства с ЦЕЛОЧИСЛЕННЫМИ ключами сортируются по возрастанию, 
а остальные располагаются в порядке создания. Разберёмся подробнее:

Есть объект с телефонными кодами:
let codes = {
    "49": "Германия",
    "41": "Швейцария",
    "44": "Великобритания",
    // ..,
    "1": "США"
};

for (let code in codes) {
    alert(code); // 1, 41, 44, 49
}

Предположим, что сайт для немецкой аудитории. Логично код 49 выводить первым.
Но наш код выдаст первым код США - 1.
То есть коды будут идти в порядке возрастания: 1, 41, 44, 49.

Скажем про ЦЕЛОЧИСЛЕННЫЕ СВОЙСТВА:
Целочисленное свойство - строка, которая может быть преобразована в целое число и обратно.
Так имя свойства 49 - целочисленное. А вот +49 или 1.2 - уже нет.

Если ключи НЕ ЦЕЛОЧИСЛЕННЫЕ - они перебираются в порядке создания.
Выходит можно схитрить и изменить имена свойств на "+1", "+41" и т.д.
