ФУНДАМЕНТАЛЬНОЕ ОТЛИЧИЕ объектов от примитивов в том, что они ХРАНЯТСЯ и КОПИРУЮТСЯ "ПО ССЫЛКЕ".
Примитивы же всегда копируются "как целое значение".

Копирование примитива:
Здесь мы помещаем копию "message" во "phrase":

let message = "Привет!";
let phrase = message;

Объекты ведут себя иначе.
ПЕРЕМЕННАЯ, присвоенная объекту, хранит НЕ САМ ОБЪЕКТ, а его "АДРЕС В ПАМЯТИ" - ссылку на него.

Т.О. при копировании ПЕРЕМЕННОЙ ОБЪЕКТА копируется ССЫЛКА, но сам объект НЕ ДУБЛИРУЕТСЯ.
Пример:

let user = { name: "John" };
let admin = user; // копируется ссылка
После такой команды имеем 2 ссылки на переменную name.

ЧТО НАМ ДАЁТ КОПИРОВАНИЕ ССЫЛОК?
Ещё пример:

let user = { name: 'John' };
let admin = user;
admin.name = 'Pete'; // изменено по ссылке из переменной "admin"
alert(user.name); // 'Pete', изменения видны по ссылке из переменной "user"

Выходит, что наша переменная name - всего одна и выглядит она как запертый шкафчик,
к которому есть 2 ключа: admin и user.
Мы можем использовать любой из этих ключей, чтобы открыть шкафчик и внести изменения в переменную name.

СРАВНЕНИЕ ПО ССЫЛКЕ

2 объекта равны только тогда, когда это один и тот же объект.

Так:
let a = {};
let b = a; // копирование по ссылке
alert( a == b ); // true, обе переменные ссылаются на один и тот же объект
alert( a === b ); // true

Здесь a и b равны потому, что a и b ссылаются на один и тот же объект a.

НО:
let a = {};
let b = {}; // два независимых объекта
alert( a == b ); // false

Хоть оба объекта и пусты - они ни при каких условиях не будут равны.

Сравнение объектов (obj1) > (obj2) или сравнение объекта с примитивом (obj1) == 5 происходит посредством
преобразования объектов в примитивы. Скоро мы изучим как, 
НО! сравнения объектов требуются КРАЙНЕ редко и обычно это результат ошибки программиста.




