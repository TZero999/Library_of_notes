Объекты олицетворяют сущности реального мира:
Пользователей, заказы и т.д.

В реальном мире объект "пользователь" может СОВЕРШАТЬ ДЕЙСТВИЕ: выбирать что-то из корзины покупок,
авторизовываться и выходить из системы, оплачивать счёт и т.п.

Такие действия в JS представлены свойствами-функциями объекта.
Пример:

let user = {
    name: "Джон",
    age: 30
  };
    user.sayHi = function() {
    alert("Привет!");
  };
user.sayHi(); // Привет!

Здесь мы используем Function Expression и создаём функцию привествия. 
Затем присваиваем её нашему объекту с помощью выражения "user.sayHi".
Затем вызвали её.

ФУНКЦИЯ, которая является СВОЙСТВОМ ОБЪЕКТА называется МЕТОДОМ этого объекта!

Теперь мы говорим, что получили метод sayHi объекта user.
Ещё проще говоря: МЕТОД - это функция объекта.

Функцию, к слову, можно было объявить и заранее, а затем использовать её в качестве метода. Вот так:

let user = {
    // ...
  };
function sayHi() { // Здесь объявляем функцию
alert("Привет!");
  }
user.sayHi = sayHi; // Здесь наша функция становится методом

СОКРАЩЁННАЯ ФОРМА ЗАПИСИ МЕТОДОВ:

Существует сокращённый синтаксис для методов:

// Метод подлиннее:
user = {
  sayHi: function() {
    alert("Привет");
  }
};

// сокращённая запись:
user = {
  sayHi() { // то же самое, что и "sayHi: function()"
    alert("Привет");
  }
};

То бишь ключевое слово "function" можно опустить и просто написать sayHi().

ВАЖНО заметить, что это - не эквивалентные формы записи. У них есть мелкие различия (связанные с наследованием объектов).
На данном этапе это не важно. 

В большинстве случаев используют сокращённую форму записи.
