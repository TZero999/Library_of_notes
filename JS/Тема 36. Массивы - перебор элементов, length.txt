Перебор элементов массива можно реализовать несколькими способами:

1) Цикл for по цифровым индексам:

let arr = ["Яблоко", "Апельсин", "Груша"];
for (let i = 0; i < arr.length; i++) {
  alert( arr[i] ); // по очереди выдаст 3 алерта с элементами массивов
}

2) Цикла, for..of:

let fruits = ["Яблоко", "Апельсин", "Слива"];
for (let fruit of fruits) { // проходит по значениям
  alert( fruit );
}

Цикл for..of не предоставляет доступа к номеру текущего элемента, только к его значению.
Но в большинстве случаев этого достаточно. А также это короче.

- НЕ СТОИТ использовать цикл for ... in:

let arr = ["Яблоко", "Апельсин", "Груша"];
for (let key in arr) {
  alert( arr[key] ); // Яблоко, Апельсин, Груша
}

Но на самом деле это – плохая идея. Существуют скрытые недостатки этого способа:
1) Цикл for..in выполняет перебор всех свойств объекта, а не только цифровых.
Проблемы возникнут, если мы будем иметь дело с "псевдомассивами" - массивами, имеющими дополнительные методы и свойства.

2) Цикл for..in оптимизирован под произвольные объекты, не массивы, поэтому в 10-100 раз медленнее.
Технически их всё ещё можно использовать с массивами, но в случае возникновения "узких мест" это вызовет проблемы.

- Немного нового о свойстве length:

Мы обозначили, что свойство length автоматически обновляется, когда изменяется размер массива.
Но если быть точным - это не совсем длина массива...

Length отображает наибольший цифровой индекс массива и добавляет к нему единицу.
Пример:

let fruits = [];
fruits[0] = "Ананас"
fruits[12] = "Яблоко";
alert( fruits.length ); // 13
Кстати, стоит напомнить, что этот пример - пример нежелательного способа использования массивов.

ВАЖНЫЙ ФАКТ - свойство length МОЖНО ПЕРЕЗАПИСАТЬ:
Причём увеличение его просто добавит пустых элементов в массив.
А вот удаление...:

let arr = [1, 2, 3, 4, 5];
arr.length = 2; // укоротили до двух элементов
arr.length = 5; // возвращаем length как было
alert( arr[3] ); // undefined, значения были удалены безвозвратно.

Отсюда САМЫЙ ПРОСТОЙ СПОСОБ ОЧИСТИТЬ МАССИВ: arr.length = 0;