Эта возможность была добавлена в язык недавно. В старых браузерах может понадобиться полифил.

Оператор нулевого слияния представлен двумя вопросительными знаками ??.

Введём для этой статьи специальный термин:
"Значение определено, если оно не равняется Null или Undefined".

Результат выражения a ?? b будет следующим:

если a определено, то a,
если a не определено, то b.

Иначе говоря, оператор ?? позволяет вернуть первый аргумент, если он не null/undefined. Иначе возвращает второй.

Как правило, оператор ?? нужен для того, чтобы задать значение по умолчанию для потенциально неопределённой переменной.

Например, здесь мы отобразим user, если её значение не null/undefined, в противном случае Аноним:
let user;
alert(user ?? "Аноним"); // Аноним (user не определено)

Кроме этого, можно записать последовательность из операторов ??, чтобы получить первое значение из списка, которое не является null/undefined.
let firstName = null;
let lastName = null;
let nickName = "Суперкодер";

// показывает первое значение, которое определено:
alert(firstName ?? lastName ?? nickName ?? "Аноним"); // Суперкодер

Оператор ?? очень часто может быть заменён оператором ||. И оператор ИЛИ появился куда раньше. 
Но появление оператора нулевого слияния ?? обусловлено тем, что:
|| возвращает первое истинное значение.
?? возвращает первое определённое значение.

Проще говоря, оператор || не различает false, 0, пустую строку "" и null/undefined.
Для него они все одинаковы, т.е. являются ложными значениями.
Если первым аргументом для оператора || будет любое из перечисленных значений, то в качестве результата мы получим второй аргумент.
Однако на практике часто требуется использовать значение по умолчанию только тогда, когда переменная является null/undefined.
Ведь именно тогда значение действительно неизвестно/не определено.

Пример:
let height = 0;
alert(height || 100); // 100
alert(height ?? 100); // 0

Приоритет оператора ?? такой же, как и у ||. Они оба равны 3 в АНГЛИЙСКОЙ таблице на MDN и 4 в РУССКОЙ таблице.
Следовательно эти операторы вычисляются до = и ?, но после +, * и т.д.

Тогда в выражении следующего типа понадобятся скобки:
let height = null;
let width = null;
let area = (height ?? 100) * (width ?? 50); 
// Не будет скобок - получим let area = height ?? (100 * width) ?? 50;
alert(area); // 5000

Использование ?? вместе с && или ||
По соображениям безопасности JavaScript запрещает использование оператора ?? вместе с && и ||, если приоритет явно не указан при помощи круглых скобок.
Используйте скобки, чтобы обойти это ограничение:
let x = 1 && 2 ?? 3; // Синтаксическая ошибка
НО
let x = (1 && 2) ?? 3; // Работает без ошибок, возвращает 2.