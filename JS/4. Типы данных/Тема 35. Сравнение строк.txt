Ранее мы говорили, что операторы сравнения сравнивают строки посимвольно в алфавитном порядке.
Тем не менее, есть некоторые нюансы:

1) Строчные буквы всегда "больше" заглавных:
alert( 'a' > 'Z' ); // true

2) Буквы, имеющие диакретические знаки идут "не по порядку":
alert( 'Österreich' > 'Zealand' ); // true
Это может привести к своеобразным результатам при сортировке названий стран: нормально было бы ожидать, что Zealand будет после Österreich в списке.

Всё опять же зависит от от внутреннего представления строк в JavaScript.

- Коды символов

Строки в JS кодируются UTF-16. Т.О. у каждого символа есть свой код.
И есть специальные методы, позволяющие получить символ по его коду и наоборот:

1) str.codePointAt(pos) - возвращает код для символа, находящегося на позиции pos:
alert( "z".codePointAt(0) ); // 122
alert( "Z".codePointAt(0) ); // 90

2) String.fromCodePoint(code) - возвращает символ по его коду.
alert( String.fromCodePoint(90) ); // Z

3) Также можно добавлять Юникодные символы по их кодам, используя \u с шестнадцатеричным кодом символа:
alert( '\u005a' ); // Z, т.к. 90 = 5а в шестнадцатиричной СС.

Сделаем строку, содержащую символы с кодами от 65 до 220 — это латиница и ещё некоторые распространённые символы:
let str = '';
for (let i = 65; i <= 220; i++) {
  str += String.fromCodePoint(i);
}
alert( str ); // ABCDEFGHIJKLMNOPQRSTUVWXYZ[\] и другие разнообразные символы

Из всего вышесказанного следует, что:
1) Все строчные буквы идут после заглавных, так как их коды больше.
2) Некоторые буквы, такие как Ö, вообще находятся вне основного алфавита. У этой буквы код больше, чем у любой буквы от a до z.

- Правильное сравнение

«Правильный» алгоритм сравнения строк у разных языков отличается.

Поэтому браузеру нужно знать, какой язык использовать для сравнения.
Стандарт ECMA 402 обеспечивает правильное сравнение строк на разных языках с учётом их правил.
Он поддерживается во всех браузерах (кроме IE10 - там нужна доп. библиотека).

метод "str.localeCompare(str2)" возвращает число, которое показывает,
какая строка больше в соответствии с правилами языка:

Отрицательное число, если str меньше str2.
Положительное число, если str больше str2.
0, если строки равны.
Пример:

alert( 'Österreich'.localeCompare('Zealand') ); // -1

У этого метода есть два дополнительных аргумента, которые указаны в документации:
(https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare).

Первый позволяет указать язык (по умолчанию берётся из окружения) — от него зависит порядок букв.
Второй — определить дополнительные правила, такие как чувствительность к регистру, а также следует ли учитывать различия между "a" и "á".

