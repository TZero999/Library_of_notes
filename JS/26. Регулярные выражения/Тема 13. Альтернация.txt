* АЛЬЕРНАЦИЯ (ИЛИ) В РЕГУЛЯРНЫХ ВЫРАЖЕНИЯХ:
Альтернация - термин для регулярных выражений.

Простым языком это "ИЛИ".
Синтаксис: "|" - обычная вертикальная черта.

# Пример: нужно найти языки программирования: HTML, PHP, Java и JavaScript:
{
    let regexp = /html|php|java(script)?/gi;
    let str = "Сначала появился язык Java, затем HTML, потом JavaScript";
    alert( str.match(regexp) ); //# Java,HTML,JavaScript
}

Принцип как у диапазонов: gr[ae]y найдёт gray, либо grey.
Вот только диапазоны работают только с символами или их наборами.
Альтернация же работает с любыми выражениями.

Пример замены диапазона альтернацией:
1) gr(a|e)y означает точно то же, что и "gr[ae]y".
2) gra|ey означает "найди gra или ey".


Альтернацию часто надо комбинироват ьсо скобочными группами,
чтобы получать корректные результаты:
1) Люблю HTML|CSS найдёт "Люблю HTML" или "CSS".
2) Люблю (HTML|CSS) найдёт "Люблю HTML" или "Люблю CSS".

* ШАБЛОН С АЛЬТЕРНАЦИЕЙ ДЛЯ ВРЕМЕНИ:
1. Часы:
В предыдущих главах часто встречалась необходимость написать шаблон для поиска временных значений
в тексте. Там мы убедились, что шаблон "regexp = /\d\d[:-]\d\d/" недостаточно точный, пропускающий 
варианты типа 26:75 и т.д.

Улучшим шаблон:
1) Добавим диапазон для первой цифры: [01]\d;
2) Добавим диапазон для первой цифры, если она равна 2: 2[0-3];
3) Затем используем альтернацию и получим следующий шаблон для значения "час":
regexp = /[01]\d|2[0-3]/

2. Минуты:
Минуты могут иметь значение от 00 до 59.
Здесь мы справимся и без альтернации:

1) Первая цифра в диапазоне  [0-5];
2) Вторая цифра - любая, следовательно \d.
Шаблон дял минут: regexp = /[0-5]\d/

3. Полное время:
Может показаться, что полный шаблон готов:
regexp = [01]\d|2[0-3][:-][0-5]\d;

Но есть небольшая проблема, такой шаблон ищет ИЛИ "[01]\d", ИЛИ "2[0-3][:-][0-5]\d".

Это неверно. Альтернация должна использоваться только для значения "час".
Поэтому используем скобочную группу:
regexp = /([01]\d|2[0-3]):[0-5]\d/;

# Пример работы шаблона выше:
{
    let regexp = /([01]\d|2[0-3]):[0-5]\d/g;
    alert("00:00 10:10 23:59 25:99 1:2".match(regexp)); //# 00:00,10:10,23:59
}
