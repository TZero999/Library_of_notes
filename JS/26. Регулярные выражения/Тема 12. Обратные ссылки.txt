Доступ к содержимому скобочных групп (...) есть не только в результате поиска и при замене, но и в самом шаблоне.

* ОБРАТНАЯ ССЫЛКА ПО НОМЕРУ: \N
К группе можно обратиться из самого шаблона, используя синтаксис "\N", где N - номер
скобочной группы.

Это может быть полезно в ситуациях, схожих с этой:
{
    ## let str = `He said: "She's the one!".`;
    ## let regexp = /['"](.*?)['"]/g;
    ## Результат - не тот, который хотелось бы
    ## alert( str.match(regexp) ); // "She'
}

Здесь шаблон нашёл открывающую кавычку ", а после нашёл текст вплоть до следующей кавычки ',
после чего поиск завершился.

Для того, чтобы шаблон заработал верно, обернём открывающие кавычки в скобочную группу
и используем обратную ссылку на неё: (['"])(.*?)\1:
{ 
  ##  let str = `He said: "She's the one!".`;
  ##  let regexp = /(['"])(.*?)\1/g;
  ##  alert( str.match(regexp) ); // "She's the one!"
} 

Принцип работы здесь прост: Движок регулярных выражений находит первую кавычку из шаблона
(['"]) и запоминает её содержимое. Это - первая скобочная группа. Далее в шаблоне \1 означает
«найти то же самое, что в первой скобочной группе», а именно – аналогичную кавычку в нашем случае.

Аналогично, \2 означает содержимое второй скобочной группы, \3 – третьей, и так далее.

* ИСКЛЮЧЁННЫЕ ИЗ ЗАПОМИНАНИЯ ГРУППЫ:
Скобочные группы, которые были исключены из запоминания при помощи "?:" не учитываются и
при обращении к ним. 

Т.О. мы не сможем обратиться к группе, исключённой из запоминания.

* ОБРАТНАЯ ССЫЛКА ПО ИМЕНИ \k<имя>:
Если у скобочной группы есть имя - к ней тоже можно обратиться, причём даже проще,
чем к нумерованной.

Синтаксис: \k<name>
# Пример:
{
    let str = `He said: "She's the one!".`;
    let regexp = /(?<quote>['"])(.*?)\k<quote>/g;
    alert( str.match(regexp) ); // "She's the one!"
}