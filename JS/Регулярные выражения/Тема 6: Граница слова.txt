* ГРАНИЦА СЛОВА \b:

Кроме проверки на начало и конец строки есть проверка на "границу слова": \b.

Когда движок рег.выр. видит сочетание \b он проверяет, что позиция в строке является границей слова.

Есть 3 вида позиций, которые являются "границами" слова:
1. Начало текста, если его первый символ входит в категорию \w;
2. Позиция внутри текста, если слева есть \w, а справа - не \w (или наоборот);
3. Конец текста, если его последний символ \w.

Например, регулярное выражение /\bJava\b/ будет обнаружено в строке 'Hello, Java!', где Java - это
отдельное слово, но не будет найдено в строке 'Hello, JavaScript!'.

# Пример:
{
    alert( "Hello, Java!".match(/\bJava\b/) ); //# Java
    alert( "Hello, JavaScript!".match(/\bJava\b/) ); //# null
}

Если будем искать регулярку /\bHello\b/ обе строки выше подойдут под данную регулярку, потому что:
- В начале строки совпадает первая проверка на \b,
- Далее слово Hello, всё совпадает,
- Далее проверка на \b - снова совпадает, так как символ после слова - запятая.

Шаблон \bJava\b также совпадаёт в первом случае. Рег.выр. \bHell\b не сработает.

# Пример:
{
    alert( "Hello, Java!".match(/\bHello\b/) ); //# Hello
    alert( "Hello, Java!".match(/\bJava\b/) );  //# Java
    alert( "Hello, Java!".match(/\bHell\b/) );  //# null (нет совпадения)
    alert( "Hello, Java!".match(/\bJava!\b/) ); //# null (нет совпадения)
}

Мы можем использовать \b не только со словами, но и с цифрами.
Так, рег.выр. /\b\d\d:\d\d\b/ ищет 2 отдельно стоящие числа, разделённые двоеточием.

# Пример:
{
    alert( "1:23 14:56 17:18".match(/\b\d\d:\d\d\b/g) ); //# [14:56, 17:18]
    alert( "12:14,13:4,15:06".match(/\b\d\d:\d\d\b/g) ); //# [12:14, 15,06]
}

* ВАЖНО! ГРАНИЦЫ СЛОВА НЕ РАБОТАЕТ ДЛЯ АЛФАВИТОВ, НЕ ОСНОВАННЫХ НА ЛАТИНИЦЕ!
Проверка \b смотрит на обе стороны границы: Должно быть \w с одной стороны и не \w - с другой.

Но \w означает латинскую букву (или цифру, знак подчёркивания). Поэтому проверка не сработает с символами
других алфавитов (кириллицей, иероглифами и т.д.).